{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","tabindex","role","defaultProps","aboutUs","Alert","alert","word","lower","charAt","slice","capitalized","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.984915a6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About Us\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutUs: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title\",\r\n  aboutUs: \"About us\",\r\n};\r\n","import React,{useState} from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleUpClick = ()=>{\r\n        // console.log('Uppercase Button Clicked '+ text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('Converted into uppercase', 'success');\r\n    }\r\n\r\n    const handleLowerClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert('Converted into lowercase', 'success');\r\n    }\r\n\r\n    const handleclearClick = ()=>{\r\n        let newText = \"\";\r\n        setText(newText)\r\n        props.showAlert('Clear textbox', 'success');\r\n    }\r\n\r\n    const handleCopyText = ()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert('Copied to clipboard', 'success');\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert('Extra spaces removed', 'success');\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log('On changed');\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const [text, setText] = useState(\"Enter Text here\");\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color : props.mode==='dark'?'white':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'black':'white',\r\n                color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLowerClick}>Convert to LowerCase</button>\r\n            <button className=\"btn btn-primary mx-1\"  data-toggle=\"modal\" onClick={handleclearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1\"  data-toggle=\"modal\" onClick={handleCopyText}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\"  data-toggle=\"modal\" onClick={handleExtraSpaces}>Remove Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"conatiner my-3\" style = {{color : props.mode==='dark'?'white':'black'}}>\r\n            <h2>Your Text summary</h2>\r\n            <p>{text.split(\" \").length } words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the text box above to preview it\"}</p>\r\n        </div>\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">\r\n        Launch demo modal\r\n        </button>\r\n\r\n        <div className=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\">Save changes</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalized =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalized(props.alert.type)}</strong> : {props.alert.msg}\r\n  </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './/component/Navbar'\nimport TextForm from './component/TextForm';\n// import About from './component/About';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const toggleMode = () => {\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark mode has been enabled','success');\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light mode has been enabled','success');\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Textapp\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert = {alert}/>\n      <div className=\"container my-3\">\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n      </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}